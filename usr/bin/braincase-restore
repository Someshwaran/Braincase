#!/usr/bin/ruby

$LOAD_PATH.unshift(File.dirname("/usr/share/braincase/lib/braincase"))

require 'braincase/utils'
require 'braincase/user'
require 'braincase/exceptions'
require 'braincase/restore_manager'
require 'logger'

def usage(message=nil)
  puts "#{message}" if !message.nil?
  puts "Usage: braincase-restore <username> <source> <timestamp> <what>"
  puts "  <username>   the user to restore for"
  puts "  <source>     the source to restore from (dropbox, local)"
  puts "  <timestamp>  should be a timestamp that correlates with a backup"
  puts "               that has already been performed and in the format the"
  puts "               backup script uses: yyyy.mm.dd.hh.mm.ss or current"
  puts "  <what>       what to restore (all, dokuwiki, repo)"
  ""
end

username = ARGV[0]
source = ARGV[1]
timestamp = ARGV[2]
what = ARGV[3]

begin

  #logname = Braincase.validate_user username ? 
  #  "/home/#{username}/logs/restore.log" : 
  #  "/var/log/braincase/restore.log"

  log = Logger.new "/home/#{username}/logs/restore.log" #logname
  log.level = Logger::DEBUG

  rm = Braincase::RestoreManager.new log, Braincase.config
  rm.restore from: source, what: what, who: username, when: timestamp

rescue Braincase::RestoreError => e
  log.error e.message
  abort e.message

rescue ArgumentError => e
  log.error e.message
  abort usage(e.message)

rescue => e
  log.error e.message
  abort e.message

end
