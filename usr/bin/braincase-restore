#!/usr/bin/ruby

$LOAD_PATH.unshift(File.dirname("/usr/share/braincase/lib/braincase"))

require 'braincase/utils'
require 'braincase/user'

def usage(message=nil)
  puts "#{message}" if !message.nil?
  puts "Usage: braincase-restore <username> <timestamp>"
  puts "  <username>   the user to restore for"
  puts "  <timestamp>  should be a timestamp that correlates with a backup"
  puts "               that has already been performed and in the format the"
  puts "               backup script uses: yyyy.mm.dd.hh.mm.ss or \"current\""
end

username = ARGV[0]
timestamp = ARGV[1]

# Check the needed args are set
abort usage("Missing arguments") if username.nil? or timestamp.nil?   #             yyyy .  mm  .  dd  .  hh .  mm . ss
abort usage("Incorrect timestamp") if timestamp != "current" and !timestamp.match(/\d{4}\.\d{2}\.\d{2}\.\d{2}.\d{2}.\d{2}/)

# Get the user and run some checks
user = Braincase::User.new username
abort "No such user" if !user.in_linux?
abort "Not a braincase user" if !user.has_braincase?

begin
  restorer = Braincase::RestoreManager.new log, config
  restorer.restore :dokuwiki, user, timestamp
rescue => e
  log.error e.message
  abort e.message
end
