#!/usr/bin/ruby

# TODO: Put these locations in a single config file
# that caHn be read by both the scripts and the plugins
queues = {
  :enable => "/var/lib/dokuwiki/data/pages/braincase/dropbox/enable_queue.txt",
  :enabled => "/var/lib/dokuwiki/data/pages/braincase/dropbox/enabled_users.txt"
}

userfile = "/etc/dokuwiki/users.auth.php"
passwd = File.read( userfile )

class DropboxQueueManager

  def initialize(queues, passwd)
    @queues = queues
  end

  def enable

    f = File.open(@queues[:enable], 'r') # open the queue
    lines = f.read.split("\n")
    f.close

    lines.each do |user| # loop through each line in the file
      
      if `user-exists #{user}; echo $?`.chomp == "0" # check the user actually exists

        puts "#{user} exists"

        if File.directory? "/home/#{user}/Dropbox" # is the Dropbox folder present?

          puts "dropbox setup for #{user} already"
          remove_from_enable_queue user
          add_user_to_enabled_users user
        else

          enable_user user # otherwise set them up
        end
      end
    end
  end

  private

  def enable_user(user)
    
    puts "set up #{user}"
    email = passwd.match(/^#{user}:.*/)[0].split(":")[3]
    system "su #{user} -c \"braincase-setup-dropbox -e #{email}\""
  end

  def remove_from_enable_queue(user)
    
    text = File.read(@queues[:enable])
    text.gsub!(/^#{user}$/, "") # remove the user from the queue
    text.gsub!(/^$/, "") # clear blank lines
    puts "TEXT: #{text}"
    
    File.open(@queues[:enable], 'w') do |f|
      f.write text
    end
  end

  def add_user_to_enabled_users(user)
    
    # drop out if user already enabled
    if File.read(@queues[:enabled]).include? "#{user}\n"
      return;
    end

    # otherwise add the user to the file
    File.open(@queues[:enabled], "a") do |f|
      f.puts user
    end
  end

end

dqm = DropboxQueueManager.new(queues, passwd)
dqm.enable
